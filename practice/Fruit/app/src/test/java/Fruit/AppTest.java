/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Fruit;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    void test1() throws Exception {
        int b[][] = new int[][] { { 1, 1, 1 }, { 2, 2, 2 }, { 3, 3, 3 } };

        double[] p = new double[] { 1000, 1000, 1000 };

        int benchmark = 6000 - 1;
        assertEquals(2, (new Sales()).saleAnalyze(b, p, benchmark));
    }

    @Test
    void test2() throws Exception {
        int b[][] = new int[][] { { 1, 1, 1 }, { 2, 2, 2 }, { 3, 3, 3 } };

        double[] p = new double[] { 1000, 1000, 1000 };

        int benchmark = 7000;
        assertEquals(1, (new Sales()).saleAnalyze(b, p, benchmark));
    }

    @Test
    void testException1() throws Exception {
        int b[][] = new int[][] { { 1, 1 }, { 2, 2, 2 }, { 3, 3, 3 } };

        double[] p = new double[] { 1000, 1000, 1000 };
        int benchmark = 6000 - 1;

        Exception exception = assertThrows(Exception.class, () -> (new Sales()).saleAnalyze(b, p, benchmark));
        assertEquals("not consistent", exception.getMessage());

    }

    @Test
    void testException2() throws Exception {
        int b[][] = new int[][] { { 1, 1, 1 }, { 2, 2, 2 }, { 3, 3, 3 } };

        double[] p = new double[] {};
        int benchmark = 6000 - 1;

        Exception exception = assertThrows(Exception.class, () -> (new Sales()).saleAnalyze(b, p, benchmark));
        assertEquals("no branch or no product", exception.getMessage());

    }

}
